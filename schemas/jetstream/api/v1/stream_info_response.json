{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://nats.io/schemas/jetstream/api/v1/stream_info_response.json",
  "description": "A response from the JetStream $JS.API.STREAM.INFO API",
  "title": "io.nats.jetstream.api.v1.stream_info_response",
  "type": "object",
  "required": [
    "type"
  ],
  "oneOf": [
    {
      "type": "object",
      "required": [
        "config",
        "state",
        "created"
      ],
      "properties": {
        "config": {
          "type": "object",
          "description": "The active configuration for the Stream",
          "allOf": [
            {
              "type": "object",
              "required": [
                "subjects",
                "retention",
                "max_consumers",
                "max_msgs",
                "max_bytes",
                "max_age",
                "storage",
                "num_replicas"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "description": "A unique name for the Stream, empty for Stream Templates.",
                  "type": "string",
                  "pattern": "^[^.*>]*$",
                  "minLength": 0
                },
                "subjects": {
                  "description": "A list of subjects to consume, supports wildcards.",
                  "type": "array",
                  "minLength": 1,
                  "items": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "retention": {
                  "description": "How messages are retained in the Stream, once this is exceeded old messages are removed.",
                  "type": "string",
                  "enum": [
                    "limits",
                    "interest",
                    "workqueue"
                  ],
                  "default": "limits"
                },
                "max_consumers": {
                  "description": "How many Consumers can be defined for a given Stream. -1 for unlimited.",
                  "type": "integer",
                  "minimum": -1,
                  "default": -1
                },
                "max_msgs": {
                  "description": "How many messages may be in a Stream, oldest messages will be removed if the Stream exceeds this size. -1 for unlimited.",
                  "type": "integer",
                  "minimum": -1,
                  "default": -1
                },
                "max_bytes": {
                  "description": "How big the Stream may be, when the combined stream size exceeds this old messages are removed. -1 for unlimited.",
                  "type": "integer",
                  "minimum": -1,
                  "default": -1
                },
                "max_age": {
                  "description": "Maximum age of any message in the stream, expressed in microseconds. 0 for unlimited.",
                  "type": "integer",
                  "minimum": 0,
                  "default": 0
                },
                "max_msg_size": {
                  "description": "The largest message that will be accepted by the Stream. -1 for unlimited.",
                  "type": "integer",
                  "minimum": -1,
                  "default": -1
                },
                "storage": {
                  "description": "The storage backend to use for the Stream.",
                  "type": "string",
                  "enum": [
                    "file",
                    "memory"
                  ],
                  "default": "file"
                },
                "num_replicas": {
                  "description": "How many replicas to keep for each message.",
                  "type": "integer",
                  "minimum": 1,
                  "default": 1,
                  "maximum": 5
                },
                "no_ack": {
                  "description": "Disables acknowledging messages that are received by the Stream.",
                  "type": "boolean",
                  "default": false
                },
                "template_owner": {
                  "description": "When the Stream is managed by a Stream Template this identifies the template that manages the Stream.",
                  "type": "string"
                },
                "discard": {
                  "description": "When a Stream reach it's limits either old messages are deleted or new ones are denied",
                  "type": "string",
                  "enum": [
                    "old",
                    "new"
                  ],
                  "default": "old"
                },
                "duplicate_window": {
                  "description": "The time window to track duplicate messages for, expressed in microseconds. 0 for default",
                  "type": "integer",
                  "minimum": 0,
                  "default": 0
                }
              }
            }
          ]
        },
        "state": {
          "type": "object",
          "description": "Detail about the current State of the Stream",
          "allOf": [
            {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "messages",
                "bytes",
                "first_seq",
                "last_seq",
                "consumer_count"
              ],
              "properties": {
                "messages": {
                  "type": "integer",
                  "description": "Number of messages stored in the Stream",
                  "minimum": 0
                },
                "bytes": {
                  "type": "integer",
                  "description": "Combined size of all messages in the Stream",
                  "minimum": 0
                },
                "first_seq": {
                  "type": "integer",
                  "description": "Sequence number of the first message in the Stream",
                  "minimum": 0
                },
                "first_ts": {
                  "type": "string",
                  "description": "The timestamp of the first message in the Stream",
                  "format": "date-time"
                },
                "last_seq": {
                  "type": "integer",
                  "description": "Sequence number of the last message in the Stream",
                  "minimum": 0
                },
                "last_ts": {
                  "type": "string",
                  "description": "The timestamp of the last message in the Stream",
                  "format": "date-time"
                },
                "consumer_count": {
                  "type": "integer",
                  "description": "Number of Consumers attached to the Stream",
                  "minimum": 0
                }
              }
            }
          ]
        },
        "created": {
          "description": "Timestamp when the stream was created",
          "type": "string",
          "format": "date-time"
        },
        "cluster": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The cluster name"
            },
            "leader": {
              "type": "string",
              "description": "The server name of the RAFT leader"
            },
            "replicas": {
              "type": "array",
              "description": "The members of the RAFT cluster",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "current",
                  "active"
                ],
                "properties": {
                  "name": {
                    "description": "The server name of the peer",
                    "type": "string",
                    "minimum": 1
                  },
                  "current": {
                    "description": "Indicates if the server is up to date and synchronised",
                    "type": "boolean",
                    "default": false
                  },
                  "active": {
                    "description": "Nanoseconds since this peer was last seen",
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP like error code in the 300 to 500 range",
              "minimum": 300,
              "maximum": 699
            },
            "description": {
              "type": "string",
              "description": "A human friendly description of the error"
            }
          }
        }
      }
    }
  ],
  "properties": {
    "type": {
      "type": "string",
      "const": "io.nats.jetstream.api.v1.stream_info_response"
    }
  }
}
